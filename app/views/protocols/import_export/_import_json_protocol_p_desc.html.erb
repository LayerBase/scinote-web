<div style="display: block;">
    <hr>
    <td>
      <div class="badge-num">
        <span class="badge-preview bg-primary size-digit-1">
          <b data-val="position"><%= 1 %></b>
        </span>
        &nbsp; &nbsp;
        <span class="step-panel-collapse-link" data-toggle="collapse">
          <span class="glyphicon collapse-step-icon glyphicon-collapse-up"></span>
          <strong data-val="name"><%= 'Protocol info' %></strong>
        </span>
      </div>
      <br>
  <div class="tab-content">
    <div class="tab-pane active" role="tabpanel">
      <div data-val="description" class="ql-editor">
        <br>
        <% prot_info_string = '' %>
        <% @remaining = ProtocolsIoHelper::PIO_P_AVAILABLE_LENGTH %>
        <% protocol_table_elements_array = [] %>
        <% protocol_iterate_elements = ['description','before_start','warning','guidelines','manuscript_citation',
          'publish_date','vendor_name','vendor_link','keywords','tags','link'] %>
        <% add_to_info_string_elements = ['description','before_start','warning','guidelines','manuscript_citation']%>
        <% big_elements = ['vendor_link','link'] %>
        <% medium_elements = ['description','before_start','warning','guidelines','manuscript_citation',
          'vendor_name','keywords','tags'] %>
        <% small_elements = ['publish_date'] %>

        <% protocol_iterate_elements.each do |element|%>
          <% if(json_object[element].present?) %>
            <% if element == 'tags' %>
              <% translation_string = 'protocols.protocols_io_import.preview.' + element %>
              <strong><%= t(translation_string) %></strong>
              <% string_of_tags='' %>
              <%  json_object['tags'].each do |tag| %>
                <% string_of_tags += tag['tag_name']+' , ' %>
              <% end %>
              <%= prepare_for_view(string_of_tags,'medium').html_safe %>
            <% else %>
              <% prot_info_string += not_null(json_object[element]) if add_to_info_string_elements.include? element %>
              <% translation_string = 'protocols.protocols_io_import.preview.' + element %>
              <strong><%= t(translation_string) %></strong>
              <% if big_elements.include? element %>
                <%= prepare_for_view(json_object[element],'big').html_safe %>
              <% end %>
              <% if medium_elements.include? element %>
                <%= prepare_for_view(json_object[element],'medium').html_safe %>
              <% end %>
              <% if small_elements.include? element %>
                <%= prepare_for_view(json_object[element],'small').html_safe %>
              <% end %>
            <% end %>
            <br>
          <% end %>
        <% end %>
        <% tables, garbage = protocolsio_string_to_table_element(prot_info_string) %>
        <% if tables.present? %>
          <br><hr><br>
          <% end %>
          <% table_count = 0 %>
          <% tables.each do |index, table| %>
          <%   table_hash = JSON.parse((Base64.decode64(table['contents']))) %>
          <%   pio_table_id = "pio_table_prot_info_"+table_count.to_s %>
          <%   protocol_table_elements_array.push([pio_table_id,table_hash['data']]) %>
          <div id="<%=pio_table_id%>" ></div>
          <%   table_count += 1 %>
        <% end %>
      </div>
    </div>
  </div>
</div>
<script type="text/javascript">
$('#modal-import-json-protocol-preview').on('shown.bs.modal', function (e) {
  var javascript_table_elements_p = <%=raw sanitize_input(protocol_table_elements_array.to_json) %>
  for(var j=0;j<javascript_table_elements_p.length;j++)
  {

  var target = document.getElementById(javascript_table_elements_p[j][0]);
  var hot = new Handsontable(target, {
    data: javascript_table_elements_p[j][1],
    startRows: <%= Constants::HANDSONTABLE_INIT_ROWS_CNT %>,
    startCols: <%= Constants::HANDSONTABLE_INIT_COLS_CNT %>,
    rowHeaders: true,
    colHeaders: true,
    fillHandle: false,
    formulas: true,
    readOnly: true
  });
}
})

</script>
